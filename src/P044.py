'''
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal 
and D = |Pk − Pj| is minimised; what is the value of D?
'''
# -*- coding: utf-8 -*

def f():
    '''
        P(n+1)-P(n) = ((n+1)(3n+3-1)-n(3n-1))/2
                                = (3n^2+5n+2-3n^2+n)/2
                                = 3n+1
        P(n+i)-P(n) = P(n+i)-P(n+i-1)+P(n+i-1)-P(n+i-2)+ ... +P(n+1)-P(n)
                                = 3n+1+3(n+1)+1+...+3(n+i-1)+1
                                = (2n+i-1)*i/2
        P(n+i)+P(n) = ((n+i)(3n+3i-1)/2+2n(3n-1))
    '''
    
    '''
        ∵ P(n+i) + P(n) = P(a), P(n+i) - P(n) = P(b)
        ∴ 2P(n+i) = P(a) + P(b), 2P(n)= P(a) - P(b)
        Which we shall find is the minimised P(b)
    '''
    pn = [n * (3 * n - 1) // 2 for n in range(1, 100000)]
    print(pn)
    pnset = set(pn)
    dpnset = list(filter(lambda n:n % 2 == 0 and n // 2 in pnset, pn))
    print(dpnset)
    
    mind = 10 ** 10
    for n in range(1, 10000):
        for i in range(1, 10000):
            d = pn[n + i] - pn[n]
            if d > mind:
                print(mind)
                return
            s = pn[n + i] + pn[n]
            if s in pnset and d in pnset:
                print("P%d + P%d = %d" % (n + i, n, s))
                print("P%d - P%d = %d" % (n + i, n, d))
                mind = d
    print(mind)

f()
