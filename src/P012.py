'''
The sequence of triangle numbers is generated by adding the natural numbers. 
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
'''
# -*- coding: utf-8 -*
import GetPrimes

def f(n):
    primes = GetPrimes.getPrimes(n)
    for i in range(n, 10 * n * n):
        triangleNumber = int(i * (i + 1) / 2)
        if countDivisors(triangleNumber, primes) >= n:
            print(triangleNumber)
            break

def countDivisors(n, primes):
    divisorsCount = 1
    for prime in primes:
        t = 1
        while n % prime == 0:
            t += 1;
            n = int(n / prime)
        divisorsCount *= t
        if n == 1:
            break
    return divisorsCount

f(500)
